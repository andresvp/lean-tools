"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["https://matheus-lean.herokuapp.com/app.79a6e3f9634b904f75c747b56554c4ea.css","439abe43b266639c48a2da94c4e48533"],["https://matheus-lean.herokuapp.com/assets/icons/icon_512x512.a6f20e07fb857a26e2a822ec92964943.png","a6f20e07fb857a26e2a822ec92964943"],["https://matheus-lean.herokuapp.com/fonts/MaterialIcons-Regular.012cf6a.woff","012cf6a10129e2275d79d6adac7f3b02"],["https://matheus-lean.herokuapp.com/fonts/Roboto-Bold.ad140ff.woff","ad140ff02a7091257e2b31619106194e"],["https://matheus-lean.herokuapp.com/fonts/Roboto-Light.37fbbba.woff","37fbbbad5577a95bdf058307c717c882"],["https://matheus-lean.herokuapp.com/fonts/Roboto-Medium.303ded6.woff","303ded6436dcf7ea75157e2aeff876ce"],["https://matheus-lean.herokuapp.com/fonts/Roboto-Regular.081b11e.woff","081b11ebaca8ad30fd092e01451015dc"],["https://matheus-lean.herokuapp.com/fonts/Roboto-Thin.90d3804.woff","90d3804f0231704c15ccc5861245e8ce"],["https://matheus-lean.herokuapp.com/img/main-logo.18795d1.png","18795d1094941e7812e11ea93bb60cd7"],["https://matheus-lean.herokuapp.com/index.html","75f1e6af4d8dfe0ddb2a8602edc4be48"],["https://matheus-lean.herokuapp.com/js/app.js","407df9d8367cc3e8d599866c1dd56928"],["https://matheus-lean.herokuapp.com/js/manifest.js","bf473ad057d1d97e7abfb9c02494f9f5"],["https://matheus-lean.herokuapp.com/js/vendor.js","c17c5d2767bc89d5adf1789345bd5213"],["https://matheus-lean.herokuapp.com/manifest.74c3b443690360889d245e17d7f81c77.json","74c3b443690360889d245e17d7f81c77"]],cacheName="sw-precache-v3-my-domain-cache-id-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var n=new URL(e);return"/"===n.pathname.slice(-1)&&(n.pathname+=t),n.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,n,a){var r=new URL(e);return a&&r.pathname.match(a)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(n)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var n=new URL(t).pathname;return e.some(function(e){return n.match(e)})},stripIgnoredUrlParameters=function(e,t){var n=new URL(e);return n.hash="",n.search=n.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),n.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],n=e[1],a=new URL(t,self.location),r=createCacheKey(a,hashParamName,n,/\.\w{8}\./);return[a.toString(),r]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(n){if(!t.has(n)){var a=new Request(n,{credentials:"same-origin"});return fetch(a).then(function(t){if(!t.ok)throw new Error("Request for "+n+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(n,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(n){return Promise.all(n.map(function(n){if(!t.has(n.url))return e.delete(n)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,n=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(n))||(n=addDirectoryIndex(n,"index.html"),t=urlsToCacheKeys.has(n));!t&&"navigate"===e.request.mode&&isPathWhitelisted([],e.request.url)&&(n=new URL("https://matheus-lean.herokuapp.com/index.html",self.location).toString(),t=urlsToCacheKeys.has(n)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(n)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});